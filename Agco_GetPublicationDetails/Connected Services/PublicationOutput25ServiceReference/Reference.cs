//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Agco_GetPublicationDetails.PublicationOutput25ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusFilter", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum StatusFilter : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedStates = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedOrDraftStates = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHOutOfDateOrReleasedStates = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHNoStatusFilter = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseFolder", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum BaseFolder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Data = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        System = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Favorites = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditorTemplate = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", ConfigurationName="PublicationOutput25ServiceReference.PublicationOutput")]
    public interface PublicationOutput {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "se", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Release(string logicalId, string version, string outputFormat, string languageCombination, ref string xmlBaselineFreezeReport, ref bool isFrozen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string ReleaseByIshLngRef(long lngRef, ref string xmlBaselineFreezeReport, ref bool isFrozen);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void SetMetadata(string logicalId, ref string version, string outputFormat, string languageCombination, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void SetMetadataByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlErrorReport")]
        string SetMetadataByIshLngRefs(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Creat" +
            "e", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Creat" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Creat" +
            "eInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Create(long folderRef, ref string logicalId, ref string version, string outputFormat, string languageCombination, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "e", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Delete(string logicalId, string version, string outputFormat, string languageCombination, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void DeleteByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadata(string[] logicalIds, Agco_GetPublicationDetails.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadataByIshLngRefs(long[] lngRefs, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshVersionRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshVersionRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshVersionRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadataByIshVersionRefs(long[] versionRefs, Agco_GetPublicationDetails.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveVersionMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveVersionMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveVersionMetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveVersionMetadata(string[] logicalIds, string version, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/FindR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/FindI" +
            "nfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string Find(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/TryGe" +
            "tMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/TryGe" +
            "tMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/TryGe" +
            "tMetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        bool TryGetMetadata(string logicalId, ref string version, out string xmlObjectList, string outputFormat, string languageCombination, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void GetMetadata(string logicalId, ref string version, out string xmlObjectList, string outputFormat, string languageCombination, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string GetMetadataByIshLngRef(long lngRef, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Conta" +
            "ining", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Conta" +
            "iningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Conta" +
            "iningInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string Containing(string logicalId, string versionNumber, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Using" +
            "Baseline", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Using" +
            "BaselineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Using" +
            "BaselineInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string UsingBaseline(string baselineId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocation", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="baseFolder")]
        Agco_GetPublicationDetails.PublicationOutput25ServiceReference.BaseFolder FolderLocation(out string[] folderPath, out long[] folderRefs, string logicalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocations", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjLocationList")]
        string FolderLocations(string[] logicalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetDa" +
            "taObjectInfoByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetDa" +
            "taObjectInfoByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetDa" +
            "taObjectInfoByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshDataObjects")]
        string GetDataObjectInfoByIshLngRef(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtDataObjectChunkByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtDataObjectChunkByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtDataObjectChunkByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void GetNextDataObjectChunkByIshLngRef(long lngRef, string dataRef, ref long offSet, ref int size, out byte[] bytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void GetPossibleTargetStatuses(string logicalId, ref string version, out string xmlLovValueList, string outputFormat, string languageCombination);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        string GetPossibleTargetStatusesByIshLngRef(long lngRef);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PublicationOutputChannel : Agco_GetPublicationDetails.PublicationOutput25ServiceReference.PublicationOutput, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublicationOutputClient : System.ServiceModel.ClientBase<Agco_GetPublicationDetails.PublicationOutput25ServiceReference.PublicationOutput>, Agco_GetPublicationDetails.PublicationOutput25ServiceReference.PublicationOutput {
        
        public PublicationOutputClient() {
        }
        
        public PublicationOutputClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PublicationOutputClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicationOutputClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicationOutputClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Release(string logicalId, string version, string outputFormat, string languageCombination, ref string xmlBaselineFreezeReport, ref bool isFrozen) {
            return base.Channel.Release(logicalId, version, outputFormat, languageCombination, ref xmlBaselineFreezeReport, ref isFrozen);
        }
        
        public string ReleaseByIshLngRef(long lngRef, ref string xmlBaselineFreezeReport, ref bool isFrozen) {
            return base.Channel.ReleaseByIshLngRef(lngRef, ref xmlBaselineFreezeReport, ref isFrozen);
        }
        
        public void SetMetadata(string logicalId, ref string version, string outputFormat, string languageCombination, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            base.Channel.SetMetadata(logicalId, ref version, outputFormat, languageCombination, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public void SetMetadataByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            base.Channel.SetMetadataByIshLngRef(lngRef, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public string SetMetadataByIshLngRefs(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadataByIshLngRefs(lngRefs, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public void Create(long folderRef, ref string logicalId, ref string version, string outputFormat, string languageCombination, string xmlMetadata) {
            base.Channel.Create(folderRef, ref logicalId, ref version, outputFormat, languageCombination, xmlMetadata);
        }
        
        public void Delete(string logicalId, string version, string outputFormat, string languageCombination, string xmlRequiredCurrentMetadata) {
            base.Channel.Delete(logicalId, version, outputFormat, languageCombination, xmlRequiredCurrentMetadata);
        }
        
        public void DeleteByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata) {
            base.Channel.DeleteByIshLngRef(lngRef, xmlRequiredCurrentMetadata);
        }
        
        public string RetrieveMetadata(string[] logicalIds, Agco_GetPublicationDetails.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadata(logicalIds, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveMetadataByIshLngRefs(long[] lngRefs, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshLngRefs(lngRefs, xmlRequestedMetadata);
        }
        
        public string RetrieveMetadataByIshVersionRefs(long[] versionRefs, Agco_GetPublicationDetails.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshVersionRefs(versionRefs, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveVersionMetadata(string[] logicalIds, string version, string xmlRequestedMetadata) {
            return base.Channel.RetrieveVersionMetadata(logicalIds, version, xmlRequestedMetadata);
        }
        
        public string Find(Agco_GetPublicationDetails.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.Find(statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public bool TryGetMetadata(string logicalId, ref string version, out string xmlObjectList, string outputFormat, string languageCombination, string xmlRequestedMetadata) {
            return base.Channel.TryGetMetadata(logicalId, ref version, out xmlObjectList, outputFormat, languageCombination, xmlRequestedMetadata);
        }
        
        public void GetMetadata(string logicalId, ref string version, out string xmlObjectList, string outputFormat, string languageCombination, string xmlRequestedMetadata) {
            base.Channel.GetMetadata(logicalId, ref version, out xmlObjectList, outputFormat, languageCombination, xmlRequestedMetadata);
        }
        
        public string GetMetadataByIshLngRef(long lngRef, string xmlRequestedMetadata) {
            return base.Channel.GetMetadataByIshLngRef(lngRef, xmlRequestedMetadata);
        }
        
        public string Containing(string logicalId, string versionNumber, string xmlRequestedMetadata) {
            return base.Channel.Containing(logicalId, versionNumber, xmlRequestedMetadata);
        }
        
        public string UsingBaseline(string baselineId, string xmlRequestedMetadata) {
            return base.Channel.UsingBaseline(baselineId, xmlRequestedMetadata);
        }
        
        public Agco_GetPublicationDetails.PublicationOutput25ServiceReference.BaseFolder FolderLocation(out string[] folderPath, out long[] folderRefs, string logicalId) {
            return base.Channel.FolderLocation(out folderPath, out folderRefs, logicalId);
        }
        
        public string FolderLocations(string[] logicalIds) {
            return base.Channel.FolderLocations(logicalIds);
        }
        
        public string GetDataObjectInfoByIshLngRef(long lngRef) {
            return base.Channel.GetDataObjectInfoByIshLngRef(lngRef);
        }
        
        public void GetNextDataObjectChunkByIshLngRef(long lngRef, string dataRef, ref long offSet, ref int size, out byte[] bytes) {
            base.Channel.GetNextDataObjectChunkByIshLngRef(lngRef, dataRef, ref offSet, ref size, out bytes);
        }
        
        public void GetPossibleTargetStatuses(string logicalId, ref string version, out string xmlLovValueList, string outputFormat, string languageCombination) {
            base.Channel.GetPossibleTargetStatuses(logicalId, ref version, out xmlLovValueList, outputFormat, languageCombination);
        }
        
        public string GetPossibleTargetStatusesByIshLngRef(long lngRef) {
            return base.Channel.GetPossibleTargetStatusesByIshLngRef(lngRef);
        }
    }
}
